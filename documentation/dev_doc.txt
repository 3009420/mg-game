things to mention. 

controller batch 

used libraries

ajax queue handler

fbvStorage

How to Build a game. 

Interface mggame 

$submission_valid = $game_engine->parseSubmission($game, $game_model);

$game->submission_id = $game_engine->saveSubmission($game, $game_model); 
    
$tags = $game_engine->parseTags($game, $game_model);

$tags = $game_engine->setWeights($game, $game_model, $tags); // in there you can use weighting functions

$turn_score = $game_engine->getScore($game, $game_model, $tags);

$data['turn'] = $game_engine->getTurn($game, $game_model, $tags);


GET REQUEST == game initializing
POST REQUESTS == game playing

API
Will communicate in JSON
SHARED SECRET

FILTER 
- THROTTLE
- IP BLOCK


Game initializing workflow. 

  GET /api/games/play/gid/(GID)/
  
  If single player receive game data 
  
  If two player
  
  1. Player waiting > receive game data
  2. Player not wating > recieve 'retry' status
  2.1 Try every 1 second for X seconds to find a partner
  2.1.1 If player found within the time > receive game data
  2.1.2 If after X seconds no partner has been found and game can be played against the computer > receive game data
  2.2 If game can be played against computer the player can skip the wait for partner by making a call */api/games/abort/AbortPartnerSearch/played_game_id/(ID)/* 
      the next time the game 'retries' to GET the game's data it will receive them.  
  
  POST /api/games/play/gid/(GID)/
  
  If single player receive game data 
  
  If two player
  
  1. Respond status 'wait'